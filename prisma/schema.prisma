// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Episode {
  id          String   @id
  title       String
  posted      DateTime @default(now())
  slug        String
  description String
  works       Work[]

  @@index([posted])
}

enum Format {
  hardcover
  paperback
  audio
  ebook
}

model Book {
  id            Int     @id @default(autoincrement())
  isbn          BigInt
  format        Format?
  imageUrl      String?
  bookshopUrl   String?
  overdriveUrl  String?
  libroFmUrl    String?
  goodReadsUrl  String?
  storyGraphUrl String?
  openLibraryId String?
  work          Work    @relation(fields: [workId], references: [id])
  workId        Int

  @@index([isbn])
  @@index([workId])
}

model Work {
  id            Int       @id @default(autoincrement())
  title         String
  authors       Author[]
  description   String?
  openLibraryId String?
  wikidataId    String?
  books         Book[]
  episodes      Episode[]

  @@index([title])
}

model Author {
  id             Int             @id @default(autoincrement())
  name           String
  sortName       String?
  alternateNames AlternateName[]
  works          Work[]

  @@index([name])
}

model AlternateName {
  id       Int    @id @default(autoincrement())
  name     String
  author   Author @relation(fields: [authorId], references: [id])
  authorId Int

  @@index([name])
}

model Metadata {
  id            Int      @id @default(autoincrement())
  lastFeedFetch DateTime @default(now())
}
